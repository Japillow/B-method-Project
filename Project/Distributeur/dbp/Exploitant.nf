Normalised(
THEORY MagicNumberX IS
  MagicNumber(Machine(Exploitant))==(3.5)
END
&
THEORY UpperLevelX IS
  First_Level(Machine(Exploitant))==(Machine(Exploitant));
  Level(Machine(Exploitant))==(0)
END
&
THEORY LoadedStructureX IS
  Machine(Exploitant)
END
&
THEORY ListSeesX IS
  List_Sees(Machine(Exploitant))==(?)
END
&
THEORY ListUsesX IS
  List_Uses(Machine(Exploitant))==(?)
END
&
THEORY ListIncludesX IS
  Inherited_List_Includes(Machine(Exploitant))==(Distributeur);
  List_Includes(Machine(Exploitant))==(Distributeur)
END
&
THEORY ListPromotesX IS
  List_Promotes(Machine(Exploitant))==(?)
END
&
THEORY ListExtendsX IS
  List_Extends(Machine(Exploitant))==(?)
END
&
THEORY ListVariablesX IS
  External_Context_List_Variables(Machine(Exploitant))==(?);
  Context_List_Variables(Machine(Exploitant))==(?);
  Abstract_List_Variables(Machine(Exploitant))==(?);
  Local_List_Variables(Machine(Exploitant))==(?);
  List_Variables(Machine(Exploitant))==(etatAlerte,nbPieces10,nbPieces50,seuilAlerteStock,capaciteCanetteParType,nbSchweppes,nbCoca);
  External_List_Variables(Machine(Exploitant))==(etatAlerte,nbPieces10,nbPieces50,seuilAlerteStock,capaciteCanetteParType,nbSchweppes,nbCoca)
END
&
THEORY ListVisibleVariablesX IS
  Inherited_List_VisibleVariables(Machine(Exploitant))==(?);
  Abstract_List_VisibleVariables(Machine(Exploitant))==(?);
  External_List_VisibleVariables(Machine(Exploitant))==(?);
  Expanded_List_VisibleVariables(Machine(Exploitant))==(?);
  List_VisibleVariables(Machine(Exploitant))==(?);
  Internal_List_VisibleVariables(Machine(Exploitant))==(?)
END
&
THEORY ListInvariantX IS
  Gluing_Seen_List_Invariant(Machine(Exploitant))==(btrue);
  Gluing_List_Invariant(Machine(Exploitant))==(btrue);
  Abstract_List_Invariant(Machine(Exploitant))==(btrue);
  Expanded_List_Invariant(Machine(Exploitant))==(nbCoca: NAT & nbSchweppes: NAT & capaciteCanetteParType: NAT & seuilAlerteStock: NAT & seuilAlerteStock<=capaciteCanetteParType & nbPieces50: NAT & nbPieces10: NAT & etatAlerte: EtatsAlerte);
  Context_List_Invariant(Machine(Exploitant))==(btrue);
  List_Invariant(Machine(Exploitant))==(btrue)
END
&
THEORY ListAssertionsX IS
  Abstract_List_Assertions(Machine(Exploitant))==(btrue);
  Expanded_List_Assertions(Machine(Exploitant))==(btrue);
  Context_List_Assertions(Machine(Exploitant))==(btrue);
  List_Assertions(Machine(Exploitant))==(btrue)
END
&
THEORY ListCoverageX IS
  List_Coverage(Machine(Exploitant))==(btrue)
END
&
THEORY ListExclusivityX IS
  List_Exclusivity(Machine(Exploitant))==(btrue)
END
&
THEORY ListInitialisationX IS
  Expanded_List_Initialisation(Machine(Exploitant))==(@(capaciteCanetteParType$0).(capaciteCanetteParType$0: NAT ==> capaciteCanetteParType:=capaciteCanetteParType$0) || nbCoca:=capaciteCanetteParType || nbSchweppes:=capaciteCanetteParType || @(seuilAlerteStock$0).(seuilAlerteStock$0: NAT ==> seuilAlerteStock:=seuilAlerteStock$0) || nbPieces50:=0 || nbPieces10:=0 || etatAlerte:=EtatAlerteOff);
  Context_List_Initialisation(Machine(Exploitant))==(skip);
  List_Initialisation(Machine(Exploitant))==(skip)
END
&
THEORY ListParametersX IS
  List_Parameters(Machine(Exploitant))==(?)
END
&
THEORY ListInstanciatedParametersX IS
  List_Instanciated_Parameters(Machine(Exploitant),Machine(Distributeur))==(?)
END
&
THEORY ListConstraintsX IS
  List_Constraints(Machine(Exploitant),Machine(Distributeur))==(btrue);
  List_Context_Constraints(Machine(Exploitant))==(btrue);
  List_Constraints(Machine(Exploitant))==(btrue)
END
&
THEORY ListOperationsX IS
  Internal_List_Operations(Machine(Exploitant))==(RemplirDistributeur,ViderBacsMonnaie);
  List_Operations(Machine(Exploitant))==(RemplirDistributeur,ViderBacsMonnaie)
END
&
THEORY ListInputX IS
  List_Input(Machine(Exploitant),RemplirDistributeur)==(?);
  List_Input(Machine(Exploitant),ViderBacsMonnaie)==(?)
END
&
THEORY ListOutputX IS
  List_Output(Machine(Exploitant),RemplirDistributeur)==(?);
  List_Output(Machine(Exploitant),ViderBacsMonnaie)==(?)
END
&
THEORY ListHeaderX IS
  List_Header(Machine(Exploitant),RemplirDistributeur)==(RemplirDistributeur);
  List_Header(Machine(Exploitant),ViderBacsMonnaie)==(ViderBacsMonnaie)
END
&
THEORY ListOperationGuardX END
&
THEORY ListPreconditionX IS
  List_Precondition(Machine(Exploitant),RemplirDistributeur)==(btrue);
  List_Precondition(Machine(Exploitant),ViderBacsMonnaie)==(btrue)
END
&
THEORY ListSubstitutionX IS
  Expanded_List_Substitution(Machine(Exploitant),ViderBacsMonnaie)==(btrue | nbPieces50,nbPieces10:=0,0);
  Expanded_List_Substitution(Machine(Exploitant),RemplirDistributeur)==(btrue | nbCoca,nbSchweppes,etatAlerte:=capaciteCanetteParType,capaciteCanetteParType,EtatAlerteOff);
  List_Substitution(Machine(Exploitant),RemplirDistributeur)==(DistributeurRempli);
  List_Substitution(Machine(Exploitant),ViderBacsMonnaie)==(BacsMonnaieVides)
END
&
THEORY ListConstantsX IS
  List_Valuable_Constants(Machine(Exploitant))==(prixCoca,prixSchweppes);
  Inherited_List_Constants(Machine(Exploitant))==(prixCoca,prixSchweppes);
  List_Constants(Machine(Exploitant))==(?)
END
&
THEORY ListSetsX IS
  Set_Definition(Machine(Exploitant),EtatsAlerte)==({EtatAlerteOn,EtatAlerteOff});
  Context_List_Enumerated(Machine(Exploitant))==(?);
  Context_List_Defered(Machine(Exploitant))==(?);
  Context_List_Sets(Machine(Exploitant))==(?);
  List_Valuable_Sets(Machine(Exploitant))==(?);
  Inherited_List_Enumerated(Machine(Exploitant))==(Produits,EtatsAlerte);
  Inherited_List_Defered(Machine(Exploitant))==(?);
  Inherited_List_Sets(Machine(Exploitant))==(Produits,EtatsAlerte);
  List_Enumerated(Machine(Exploitant))==(?);
  List_Defered(Machine(Exploitant))==(?);
  List_Sets(Machine(Exploitant))==(?);
  Set_Definition(Machine(Exploitant),Produits)==({Coca,Schweppes})
END
&
THEORY ListHiddenConstantsX IS
  Abstract_List_HiddenConstants(Machine(Exploitant))==(?);
  Expanded_List_HiddenConstants(Machine(Exploitant))==(?);
  List_HiddenConstants(Machine(Exploitant))==(?);
  External_List_HiddenConstants(Machine(Exploitant))==(?)
END
&
THEORY ListPropertiesX IS
  Abstract_List_Properties(Machine(Exploitant))==(btrue);
  Context_List_Properties(Machine(Exploitant))==(btrue);
  Inherited_List_Properties(Machine(Exploitant))==(prixCoca = 60 & prixSchweppes = 80 & Produits: FIN(INTEGER) & not(Produits = {}) & EtatsAlerte: FIN(INTEGER) & not(EtatsAlerte = {}));
  List_Properties(Machine(Exploitant))==(btrue)
END
&
THEORY ListSeenInfoX END
&
THEORY ListANYVarX IS
  List_ANY_Var(Machine(Exploitant),RemplirDistributeur)==(?);
  List_ANY_Var(Machine(Exploitant),ViderBacsMonnaie)==(?)
END
&
THEORY ListOfIdsX IS
  List_Of_Ids(Machine(Exploitant)) == (? | prixCoca,prixSchweppes,Produits,EtatsAlerte,Coca,Schweppes,EtatAlerteOn,EtatAlerteOff | ? | etatAlerte,nbPieces10,nbPieces50,seuilAlerteStock,capaciteCanetteParType,nbSchweppes,nbCoca | RemplirDistributeur,ViderBacsMonnaie | ? | included(Machine(Distributeur)) | ? | Exploitant);
  List_Of_HiddenCst_Ids(Machine(Exploitant)) == (? | ?);
  List_Of_VisibleCst_Ids(Machine(Exploitant)) == (prixCoca,prixSchweppes);
  List_Of_VisibleVar_Ids(Machine(Exploitant)) == (? | ?);
  List_Of_Ids_SeenBNU(Machine(Exploitant)) == (?: ?);
  List_Of_Ids(Machine(Distributeur)) == (prixCoca,prixSchweppes,Produits,EtatsAlerte,Coca,Schweppes,EtatAlerteOn,EtatAlerteOff | ? | etatAlerte,nbPieces10,nbPieces50,seuilAlerteStock,capaciteCanetteParType,nbSchweppes,nbCoca | ? | DisponibiliteCoca,DisponibiliteSchweppes,PeutRendreMonnaie,Avertir,DistributeurRempli,BacsMonnaieVides | ? | ? | ? | Distributeur);
  List_Of_HiddenCst_Ids(Machine(Distributeur)) == (? | ?);
  List_Of_VisibleCst_Ids(Machine(Distributeur)) == (prixCoca,prixSchweppes);
  List_Of_VisibleVar_Ids(Machine(Distributeur)) == (? | ?);
  List_Of_Ids_SeenBNU(Machine(Distributeur)) == (?: ?)
END
&
THEORY SetsEnvX IS
  Sets(Machine(Exploitant)) == (Type(EtatsAlerte) == Cst(SetOf(etype(EtatsAlerte,0,1)));Type(Produits) == Cst(SetOf(etype(Produits,0,1))))
END
&
THEORY ConstantsEnvX IS
  Constants(Machine(Exploitant)) == (Type(prixSchweppes) == Cst(btype(INTEGER,?,?));Type(prixCoca) == Cst(btype(INTEGER,?,?));Type(EtatAlerteOff) == Cst(etype(EtatsAlerte,0,1));Type(EtatAlerteOn) == Cst(etype(EtatsAlerte,0,1));Type(Schweppes) == Cst(etype(Produits,0,1));Type(Coca) == Cst(etype(Produits,0,1)))
END
&
THEORY VariablesEnvX IS
  Variables(Machine(Exploitant)) == (Type(nbCoca) == Mvl(btype(INTEGER,?,?));Type(nbSchweppes) == Mvl(btype(INTEGER,?,?));Type(capaciteCanetteParType) == Mvl(btype(INTEGER,?,?));Type(seuilAlerteStock) == Mvl(btype(INTEGER,?,?));Type(nbPieces50) == Mvl(btype(INTEGER,?,?));Type(nbPieces10) == Mvl(btype(INTEGER,?,?));Type(etatAlerte) == Mvl(etype(EtatsAlerte,?,?)))
END
&
THEORY OperationsEnvX IS
  Operations(Machine(Exploitant)) == (Type(ViderBacsMonnaie) == Cst(No_type,No_type);Type(RemplirDistributeur) == Cst(No_type,No_type))
END
&
THEORY TCIntRdX IS
  predB0 == OK;
  extended_sees == KO;
  B0check_tab == KO;
  local_op == OK;
  abstract_constants_visible_in_values == KO;
  project_type == SOFTWARE_TYPE;
  event_b_deadlockfreeness == KO;
  variant_clause_mandatory == KO;
  event_b_coverage == KO;
  event_b_exclusivity == KO;
  genFeasibilityPO == KO
END
)
